# serverless.yml

service: my-express-app

custom:
  tableName: 'users-table-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-2

  environment:
    USERS_TABLE: ${self:custom.tableName}      

plugins:
  - serverless-offline
  - serverless-dynamodb-local

functions:
  app:
    handler: app.handler
    events:
      - http: 'ANY /'
      - http: 'ANY {proxy+}'
  getUser:
    handler: app.handler
    events:
      - http: 'GET /users/{proxy+}'
  createUser:
    handler: app.handler
    timeout: 15
    events:
      - http: 'POST /users'     
    iamRoleStatementsInherit: true         
    iamRoleStatements:
      - Effect: Allow
        Action:
          # - dynamodb:Query
          # - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          # - dynamodb:DeleteItem
        Resource:
          Fn::GetAtt: [UsersDynamoDBTable, Arn]      

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        